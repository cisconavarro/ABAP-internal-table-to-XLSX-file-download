    DATA: lv_filename      TYPE string,
          lv_path          TYPE string,
          lv_fullpath      TYPE string,
          lv_user_action   TYPE i,
          lt_archivo_datos TYPE ty_t_archivo_datos,
          ls_archivo_datos TYPE ty_archivo_datos,

          lv_length        TYPE i,
          lt_xml_stream    TYPE xml_rawdata.

    ls_archivo_datos = VALUE #( iblnr = TEXT-002 " Documento de Invemtario
                                gjahr = TEXT-003 " Ejercicio
                                zldat = TEXT-004 " Fecha de Recuento
                                zeili = TEXT-005 " Pos
                                matnr = TEXT-006 " Material
                                charg = TEXT-007 " Lote
                                bstar = TEXT-008 " Tipo de Stock
                                menge = TEXT-009 " Cantidad
                                erfme = TEXT-010 " UME
                                xnull = TEXT-011 " Recuento 0
                              ).

    lt_archivo_datos = VALUE #( BASE lt_archivo_datos ( ls_archivo_datos ) ).

    TRY.
        cl_salv_table=>factory(
        IMPORTING
        r_salv_table = DATA(lr_table)
        CHANGING
        t_table = lt_archivo_datos ). " Your table
      CATCH cx_salv_msg INTO DATA(ol_msg).
        ol_msg->get_message( ).
    ENDTRY.

    TRY.
        DATA(lt_fcat) = cl_salv_controller_metadata=>get_lvc_fieldcatalog(
        r_columns = lr_table->get_columns( )
        r_aggregations = lr_table->get_aggregations( ) ).

        DATA(lr_result) = cl_salv_ex_util=>factory_result_data_table(
        r_data = REF #( lt_archivo_datos )
        t_fieldcatalog = lt_fcat ).

        cl_salv_bs_lex=>export_from_result_data_table( EXPORTING is_format            = if_salv_bs_lex_format=>mc_format_xlsx
                                                                 ir_result_data_table = lr_result
                                                       IMPORTING er_result_file       = DATA(lr_xstring) ).
      CATCH cx_salv_unexpected_param_value INTO DATA(ol_param_value).
        ol_param_value->get_text( ).
    ENDTRY.

    CALL METHOD cl_salv_bs_tt_util=>if_salv_bs_tt_util~transform
      EXPORTING
        xml_type      = if_salv_bs_xml=>c_type_xlsx
        xml_version   = if_salv_bs_xml=>version_26
        r_result_data = lr_result
        xml_flavour   = if_salv_bs_c_tt=>c_tt_xml_flavour_export
        gui_type      = if_salv_bs_xml=>c_gui_type_gui
      IMPORTING
        xml           = DATA(lv_xml).

    CALL FUNCTION 'SCMS_XSTRING_TO_BINARY'
      EXPORTING
        buffer        = lv_xml
      IMPORTING
        output_length = lv_length
      TABLES
        binary_tab    = lt_xml_stream.

    CALL METHOD cl_gui_frontend_services=>file_save_dialog
      EXPORTING
        default_extension    = '.xlsx'
        default_file_name    = 'PLANTILLA.xlsx'
        file_filter          = '(*.xlsx)|*.xlsx'
      CHANGING
        filename             = lv_filename
        path                 = lv_path
        fullpath             = lv_fullpath
        user_action          = lv_user_action
      EXCEPTIONS
        cntl_error           = 1
        error_no_gui         = 2
        not_supported_by_gui = 3
        OTHERS               = 4.
    IF sy-subrc <> 0.
      MESSAGE ID sy-msgid TYPE 'I' NUMBER sy-msgno
            WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
    ELSEIF lv_user_action <> cl_gui_frontend_services=>action_cancel.

      CALL METHOD cl_gui_frontend_services=>gui_download
        EXPORTING
          bin_filesize            = lv_length
          filetype                = 'BIN'
          filename                = lv_filename
        CHANGING
          data_tab                = lt_xml_stream
        EXCEPTIONS
          file_write_error        = 1
          no_batch                = 2
          gui_refuse_filetransfer = 3
          invalid_type            = 4
          no_authority            = 5
          unknown_error           = 6
          header_not_allowed      = 7
          separator_not_allowed   = 8
          filesize_not_allowed    = 9
          header_too_long         = 10
          dp_error_create         = 11
          dp_error_send           = 12
          dp_error_write          = 13
          unknown_dp_error        = 14
          access_denied           = 15
          dp_out_of_memory        = 16
          disk_full               = 17
          dp_timeout              = 18
          file_not_found          = 19
          dataprovider_exception  = 20
          control_flush_error     = 21
          not_supported_by_gui    = 22
          error_no_gui            = 23
          OTHERS                  = 24.
      IF sy-subrc <> 0.
        MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
          WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
      ENDIF.

    ENDIF.
